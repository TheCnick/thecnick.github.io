@import url('https://fonts.googleapis.com/css2?family=UnifrakturCook:wght@700&family=Cinzel:wght@400;700&display=swap');

:root {
  --sage: #3a4a3f;
  --cream: #f4f1ea;
  --black: #121212;
  --gray: #2e2e2e;
  --header-height: 120px;
}


body {
  margin: 0;
  background-color: var(--black);
  color: var(--cream);
  line-height: 1.6;
}
  
.drawer-header {
    background: var(--sage);
    padding: 1rem;
    text-align: center;
    font-family: 'UnifrakturCook', cursive;
    font-size: 4rem;
    color: var(--cream);
    position: relative;
    z-index: 1001;
    height: 120px;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}



/* style.css */

/* Target the specific ID for higher specificity */
#drawer2 { 
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw; /* Now this should take precedence */
    height: 100vh;
    z-index: 1000;
    display: flex; 
    justify-content: center; 
    align-items: 118px;
   
    
    transform: translateY(-100%); /* THIS SHOULD NOW TAKE PRECEDENCE */
    transition: transform 0.6s ease-in-out !important; 
    
    -webkit-user-drag: none;
    user-select: none;
    overflow: hidden;
}

.drawer-background-image {
    position: absolute; /* Position it absolutely within the drawer container */
    top: 0; /* Align to the top of the container */
    left: 50%; /* Center horizontally */
    transform: translateX(-50%); /* Adjust for perfect centering */
    width: auto; /* Let the image define its width based on aspect ratio */
    max-width: 100%; /* Ensure it doesn't overflow horizontally */
    height: 100%; /* Make it fill the height of its parent container */
    object-fit: contain; /* Ensure the entire image is visible without cropping */
    z-index: 1; /* Behind the content */
}
  
    /* filter: drop-shadow(0 4px 3px rgba(0,0,0,0.4)); */


/* Keep the class-based selector for the open state, but ensure it's specific enough */
/* You could also use #drawer2.is-open if needed, but .drawer.is-open is usually fine */
.drawer.is-open { 
    transform: translateY(0) !important; 
}


/* Styles for drawer-content and icon-link can remain as they are, 
   unless they are also being overridden. */
.drawer-content {
    position: relative; /* Position relative to the drawer-container */
    z-index: 2; /* On top of the drawer image */
    display: flex;
    justify-content: center;
    align-items: center; /* Center the image within this content area */
    width: 100%; /* Take full width of parent */
    height: 100%; /* Take full height of parent (drawer-container) */
    padding-top: var(--header-height); /* Push content down to account for the header and handle part of the drawer image */
    box-sizing: border-box;
    pointer-events: none; /* Allows clicks to pass through to the drawer itself if needed */
}

.drawer-content img {
    /* Adjust these values to place your oval picture precisely where you want it within the drawer image */
    width: 5vh;
    height: 5vh;
    /* top: 35%; 
    left: 46%; */
    /* With flexbox centering, you might not need top/left. If you need fine-tuning, use margin or absolute positioning */
    /* Example for fine-tuning with margins if centered: */
    /* margin-top: -20px; */ /* Move up slightly from center */
    /* margin-left: -10px; */ /* Move left slightly from center */
    position: relative; /* Keep relative if you want to adjust with margins */
    pointer-events: auto; /* Make the image clickable */
}

.icon-link {
    color: white;
    text-decoration: none;
    text-align: center;
    margin: 0 20px;
    opacity: 0;
    transition: opacity 0.5s ease-in-out 0.4s;
}

.drawer.is-open .icon-link {
    opacity: 1;
}

.icon-link i {
    font-size: 2em;
    display: block;
    margin-bottom: 8px;
}
  
